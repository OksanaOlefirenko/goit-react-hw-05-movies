{"version":3,"file":"static/js/194.bc318b42.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","moviesAPI.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 99;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <TailSpin\n        ariaLabel=\"loading-indicator\"\n        height=\"80\"\n        width=\"80\"\n        radius=\"10\"\n        color=\"green\"\n      />\n    </StyledLoader>\n  );\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '250f014fd6a936550e378176122f5d39',\n  },\n});\n\nexport const getPopularMovies = async () => {\n  const response = await instance('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await instance(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const response = await instance(`/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getReviews = async id => {\n  const response = await instance(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const response = await instance(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin: 0 auto;\n  padding: 30px;\n`;\nexport const Image = styled.img`\n  margin-right: 20px;\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  transform: scale(1);\n  transition: all 250ms linear;\n  &:hover {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\nexport const Info = styled.div`\n  text-align: center;\n  line-height: 2;\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 700;\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: red;\n  margin-bottom: 20px;\n`;\n\nexport const AddInfo = styled.h2`\n  color: green;\n  margin-bottom: 20px;\n  padding-left: 50px;\n`;\n","import {\n  Container,\n  Image,\n  Info,\n  Title,\n  AddInfo,\n  Link,\n} from './MovieInfo.styled';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieInfo = ({ movie }) => {\n  const { title, overview, poster_path, release_date, vote_average, genres } =\n    movie;\n\n  const location = useLocation();\n\n  const genresAll = genres.map(genre => genre.name).join(', ');\n  return (\n    <>\n      <Container>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n          }\n          alt={title}\n        />\n        <Info>\n          <Title>{title}</Title>\n          <h2> {release_date}</h2>\n          <p> User Score: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresAll}</p>\n        </Info>\n      </Container>\n\n      <div>\n        <AddInfo>Additional information</AddInfo>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: green;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object,\n  children: PropTypes.any,\n};\n","import { MovieInfo } from 'components/MovieInfo';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'moviesAPI';\nimport { Loader } from 'components/Loader';\nimport { BackLink } from 'components/BackLink';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchMovieById() {\n      setLoading(true);\n      try {\n        const movie = await getMovieById(movieId);\n        setMovie(movie);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}> Go back</BackLink>\n      {loading && <Loader />}\n      {movie && <MovieInfo movie={movie} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLoader","styled","Loader","ariaLabel","height","width","radius","color","instance","axios","method","baseURL","params","api_key","getPopularMovies","response","data","results","getMovieById","id","getCast","cast","getReviews","getSearchMovie","query","Container","Image","Info","Link","NavLink","Title","AddInfo","MovieInfo","movie","title","overview","poster_path","release_date","vote_average","genres","location","useLocation","genresAll","map","genre","name","join","src","alt","to","state","StyledLink","BackLink","children","size","movieId","useParams","useState","loading","setLoading","setMovie","error","setError","backLinkHref","from","useEffect","message","fetchMovieById"],"sourceRoot":""}