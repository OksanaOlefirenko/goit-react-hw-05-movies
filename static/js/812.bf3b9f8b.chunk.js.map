{"version":3,"file":"static/js/812.bf3b9f8b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MovieListItem/MovieListItem.styled.js","components/MovieListItem/MovieListItem.jsx","components/MoviesList/MoviesList.jsx","moviesAPI.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","pages/CastPage.jsx","pages/Home.jsx","hooks/useFetchMovies.js","pages/Home.styled.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 99;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <TailSpin\n        ariaLabel=\"loading-indicator\"\n        height=\"80\"\n        width=\"80\"\n        radius=\"10\"\n        color=\"green\"\n      />\n    </StyledLoader>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: -30px;\n  margin-left: -30px;\n  flex-wrap: wrap;\n  padding-top: 40px;\n  padding-bottom: 40px;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const Item = styled.li`\n  width: 300px;\n  flex-basis: calc(100% / 4 - 30px);\n  margin-top: 30px;\n  margin-left: 30px;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n  &:hover {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 400px;\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  padding: 10px 20px;\n  color: #000;\n  white-space: nowrap;\n  overflow: hidden;\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link, Item, Poster, Title } from './MovieListItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieListItem = ({ movie }) => {\n  const { id, poster_path, title } = movie;\n  const location = useLocation();\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <Item>\n        <Poster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n          }\n          alt={title}\n        />\n        <Title>{title}</Title>\n      </Item>\n    </Link>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Container, List } from './MoviesList.styled';\nimport { MovieListItem } from 'components/MovieListItem';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <Container>\n      <List>\n        {movies.map(movie => (\n          <MovieListItem key={movie.id} movie={movie} />\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","const axios = require('axios');\nexport const API_KEY = '250f014fd6a936550e378176122f5d39';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getPopularMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data.cast;\n};\n\nexport const getReviews = async id => {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastBox = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: -30px;\n  margin-left: -30px;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 4 - 30px);\n  margin-top: 30px;\n  margin-left: 30px;\n  border-radius: 5px;\n  overflow: hidden;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  transform: scale(1);\n  transition: all 250ms linear;\n  &:hover {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Name = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 15px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 450px;\n  overflow: hidden;\n`;\n\nexport const Character = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 15px;\n  padding-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { CastBox, List, Item, Img, Name, Character } from './Cast.styled';\n\nexport const Cast = ({ actors }) => {\n  return (\n    <CastBox>\n      <List>\n        {actors.map(({ id, name, profile_path, character }) => (\n          <Item key={id}>\n            <Img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n              }\n              alt={name}\n            />\n            <Name>{name}</Name>\n            <Character>{character}</Character>\n          </Item>\n        ))}\n      </List>\n    </CastBox>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader';\nimport { getCast } from 'moviesAPI';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Cast } from 'components/Cast';\n\nexport const CastPage = () => {\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    async function fetchCastById() {\n      setLoading(true);\n      try {\n        const actors = await getCast(movieId);\n        setActors(actors);\n      } catch (error) {\n        toast.error('Actors not found');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchCastById();\n  }, [movieId]);\n\n  return (\n    <main>\n      <ToastContainer theme=\"colored\" position=\"top-right\" autoClose={3000} />\n      {loading && <Loader />}\n      {actors && <Cast actors={actors} />}\n    </main>\n  );\n};\n","import { MoviesList } from 'components/MoviesList';\nimport { Loader } from 'components/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useFetchMovies } from 'hooks';\nimport { Title } from './Home.styled';\n\nexport const Home = () => {\n  const { movies, loading, error } = useFetchMovies();\n  return (\n    <main>\n      <ToastContainer theme=\"colored\" position=\"top-right\" autoClose={3000} />\n      <Title>Trending today</Title>\n      {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n      {loading && <Loader />}\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n","import { getPopularMovies } from '../moviesAPI';\nimport { useState, useEffect } from 'react';\n\nexport const useFetchMovies = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setLoading(true);\n      try {\n        const items = await getPopularMovies();\n        setMovies(items);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovies();\n  }, []);\n  return { movies, loading, error };\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: red;\n  margin-top: 30px;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin: 0 auto;\n  padding: 30px;\n`;\nexport const Image = styled.img`\n  margin-right: 20px;\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  transform: scale(1);\n  transition: all 250ms linear;\n  &:hover {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\nexport const Info = styled.div`\n  text-align: center;\n  line-height: 2;\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 700;\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: red;\n  margin-bottom: 20px;\n`;\n\nexport const AddInfo = styled.h2`\n  color: green;\n  margin-bottom: 20px;\n  padding-left: 50px;\n`;\n","import {\n  Container,\n  Image,\n  Info,\n  Title,\n  AddInfo,\n  Link,\n} from './MovieInfo.styled';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieInfo = ({ movie }) => {\n  const { title, overview, poster_path, release_date, vote_average, genres } =\n    movie;\n\n  const location = useLocation();\n\n  const genresAll = genres.map(genre => genre.name).join(', ');\n  return (\n    <>\n      <Container>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n          }\n          alt={title}\n        />\n        <Info>\n          <Title>{title}</Title>\n          <h2> {release_date}</h2>\n          <p> User Score: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresAll}</p>\n        </Info>\n      </Container>\n\n      <div>\n        <AddInfo>Additional information</AddInfo>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: green;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.string,\n  children: PropTypes.any,\n};\n","import { MovieInfo } from 'components/MovieInfo';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'moviesAPI';\nimport { Loader } from 'components/Loader';\nimport { BackLink } from 'components/BackLink';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function fetchMovieById() {\n      setLoading(true);\n      try {\n        const movie = await getMovieById(movieId);\n        setMovie(movie);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}> Go back</BackLink>\n      {loading && <Loader />}\n      {movie && <MovieInfo movie={movie} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n    </main>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 40px;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding: 10px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { Wrapper, SearchForm, Input, SearchButton } from './SearchBox.styled';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { FaSearch } from 'react-icons/fa';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQueryChange = e => {\n    setSearchQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      return toast.warn('Please, enter search movie');\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n  return (\n    <Wrapper>\n      <SearchForm onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={searchQuery}\n          onChange={handleQueryChange}\n        />\n        <SearchButton type=\"submit\">\n          <FaSearch size={20}></FaSearch>\n        </SearchButton>\n      </SearchForm>\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { SearchBox } from 'components/SearchBox';\nimport { Loader } from 'components/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getSearchMovie } from '../moviesAPI';\nimport { MoviesList } from 'components/MoviesList';\n\nexport const Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const newSearchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (newSearchQuery) {\n      fetchSearchMovie(newSearchQuery);\n    }\n    setSearchQuery(newSearchQuery);\n  }, [newSearchQuery]);\n\n  const fetchSearchMovie = async query => {\n    try {\n      setLoading(true);\n      const items = await getSearchMovie(query);\n      if (items.length === 0) {\n        return toast.error(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n      }\n      setMovies(items);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFormSubmit = newSearchQuery => {\n    if (newSearchQuery === searchQuery) return;\n    setSearchParams({ query: newSearchQuery });\n  };\n\n  return (\n    <main>\n      <ToastContainer theme=\"colored\" position=\"top-right\" autoClose={3000} />\n      <SearchBox onSubmit={handleFormSubmit} />\n      {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n      {loading && <Loader />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n"],"names":["StyledLoader","styled","Loader","ariaLabel","height","width","radius","color","Container","List","Link","NavLink","Item","Poster","Title","MovieListItem","movie","id","poster_path","title","location","useLocation","to","state","from","src","alt","MoviesList","movies","map","axios","require","API_KEY","BASE_URL","getPopularMovies","url","get","response","data","results","getMovieById","getCast","cast","getReviews","getSearchMovie","query","CastBox","Name","Img","Character","Cast","actors","name","profile_path","character","CastPage","movieId","useParams","useState","loading","setLoading","setActors","useEffect","toast","fetchCastById","theme","position","autoClose","Home","setMovies","error","setError","items","fetchMovies","useFetchMovies","message","Image","Info","AddInfo","MovieInfo","overview","release_date","vote_average","genres","genresAll","genre","join","StyledLink","BackLink","children","size","MovieDetails","setMovie","backLinkHref","fetchMovieById","Wrapper","SearchForm","Input","SearchButton","SearchBox","onSubmit","searchQuery","setSearchQuery","e","preventDefault","trim","type","autocomplete","autoFocus","placeholder","value","onChange","currentTarget","Movies","useSearchParams","searchParams","setSearchParams","newSearchQuery","fetchSearchMovie","length"],"sourceRoot":""}